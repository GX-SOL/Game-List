-- // Rayfield UI Loader
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Auto Farm Hub",
    LoadingTitle = "Auto Farm | Sirius Rayfield",
    LoadingSubtitle = "by LG",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil,
       FileName = "AutoFarmConfig"
    },
    KeySystem = false
})

-- // Variables
local selectedEnemy = nil
local autoFarm = false
local player = game.Players.LocalPlayer
local hrp = player.Character:WaitForChild("HumanoidRootPart")

-- // Tab & Section
local MainTab = Window:CreateTab("Main", 4483362458)
local MainSection = MainTab:CreateSection("Auto Farm")

-- Dropdown for selecting enemy
local enemyDropdown = MainTab:CreateDropdown({
    Name = "Select Enemy",
    Options = {},
    CurrentOption = {},
    Flag = "EnemyDropdown",
    Callback = function(Option)
        selectedEnemy = Option[1]
    end,
})

-- Refresh button for enemy list
MainTab:CreateButton({
    Name = "Refresh Enemy List",
    Callback = function()
        local list = {}
        for _, enemy in pairs(workspace.Enemys:GetChildren()) do
            if enemy:FindFirstChild("HumanoidRootPart") then
                table.insert(list, enemy.Name)
            end
        end
        enemyDropdown:Set(list)
    end,
})

-- Auto Farm Toggle
MainTab:CreateToggle({
    Name = "Auto Farm (TP)",
    CurrentValue = false,
    Flag = "AutoFarm",
    Callback = function(Value)
        autoFarm = Value
        if autoFarm then
            task.spawn(function()
                while autoFarm and selectedEnemy do
                    -- Find enemy of selected type
                    local enemy = nil
                    for _, e in pairs(workspace.Enemys:GetChildren()) do
                        if e.Name == selectedEnemy and e:FindFirstChild("HumanoidRootPart") and e:FindFirstChild("Humanoid") and e.Humanoid.Health > 0 then
                            enemy = e
                            break
                        end
                    end

                    if enemy then
                        -- TP once to enemy
                        hrp.CFrame = enemy.HumanoidRootPart.CFrame * CFrame.new(0, 0, -3)

                        -- Wait for enemy to die
                        repeat
                            task.wait(0.2)
                        until enemy == nil or not enemy:FindFirstChild("Humanoid") or enemy.Humanoid.Health <= 0 or autoFarm == false
                    else
                        task.wait(0.5)
                    end
                end
            end)
        end
    end,
})