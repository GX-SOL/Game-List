--== Services
local Players = game:GetService("Players")
local RS = game:GetService("ReplicatedStorage")
local LP = Players.LocalPlayer

local Remotes = RS:WaitForChild("Remotes")
local ClickRemote = Remotes:WaitForChild("PlayerClickAttackSkill")

local EnemyFolder = workspace:WaitForChild("Enemys")

--== Helpers
local function getChar() return LP.Character or LP.CharacterAdded:Wait() end
local function getHRP()
    local char = getChar()
    return char:WaitForChild("HumanoidRootPart")
end

local function getEnemyNames()
    local names, seen = {}, {}
    for _, m in ipairs(EnemyFolder:GetChildren()) do
        if m:IsA("Model") and m:FindFirstChild("HumanoidRootPart") then
            if not seen[m.Name] then
                seen[m.Name] = true
                table.insert(names, m.Name)
            end
        end
    end
    table.sort(names)
    return names
end

local function isAlive(enemy)
    local hum = enemy and enemy:FindFirstChildOfClass("Humanoid")
    return hum and hum.Health > 0 and enemy.Parent ~= nil
end

local function nearestEnemyByName(name)
    local myHRP = getHRP()
    local best, bestDist = nil, math.huge
    for _, m in ipairs(EnemyFolder:GetChildren()) do
        if m.Name == name and m:FindFirstChild("HumanoidRootPart") and m:FindFirstChildOfClass("Humanoid") then
            if isAlive(m) then
                local d = (m.HumanoidRootPart.Position - myHRP.Position).Magnitude
                if d < bestDist then best, bestDist = m, d end
            end
        end
    end
    return best
end

local function safeTP(cf)
    -- PivotTo is more reliable across R6/R15; do it a few times in case of server correction
    local char = getChar()
    for _ = 1, 3 do
        char:PivotTo(cf)
        task.wait(0.05)
    end
end

--== Rayfield UI
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Window = Rayfield:CreateWindow({
    Name = "LG Auto Hub",
    LoadingTitle = "Auto Farm + Click",
    LoadingSubtitle = "Rayfield",
    KeySystem = false
})

local Tab = Window:CreateTab("Combat", 4483362458)

-- Enemy selector
local selectedEnemy = nil
local DD = Tab:CreateDropdown({
    Name = "Select Enemy",
    Options = getEnemyNames(),
    CurrentOption = "",
    Callback = function(opt)
        selectedEnemy = typeof(opt) == "table" and opt[1] or opt
    end
})

Tab:CreateButton({
    Name = "Refresh Enemies",
    Callback = function()
        DD:Refresh(getEnemyNames(), true)
    end
})

-- Auto Click (your exact remote spam)
local clickRunning = false
Tab:CreateToggle({
    Name = "Auto Click (very fast)",
    CurrentValue = false,
    Callback = function(v)
        clickRunning = v
        if v then
            task.spawn(function()
                while clickRunning do
                    local args = {
                        [1] = {attackEnemyGUID = "315a2e7f-6fff-4442-a3d4-2f7d86f39696"}
                    }
                    pcall(function()
                        ClickRemote:FireServer(unpack(args))
                    end)
                    task.wait() -- set to task.wait(0) for max spam (riskier)
                end
            end)
        end
    end
})

-- Auto Farm (TP -> wait death -> next)
local farmRunning = false
Tab:CreateToggle({
    Name = "Auto Farm (TP until dead)",
    CurrentValue = false,
    Callback = function(v)
        farmRunning = v
        if v then
            task.spawn(function()
                while farmRunning do
                    if not selectedEnemy or selectedEnemy == "" then
                        task.wait(0.2); continue
                    end

                    local target = nearestEnemyByName(selectedEnemy)
                    if not target then
                        task.wait(0.2); continue
                    end

                    local hrpEnemy = target:FindFirstChild("HumanoidRootPart")
                    local hum = target:FindFirstChildOfClass("Humanoid")
                    if hrpEnemy and hum then
                        -- stand slightly above/in front to avoid clipping
                        local offset = CFrame.new(0, 3, -2)
                        safeTP(hrpEnemy.CFrame * offset)

                        -- stay here until this enemy dies or farm stops
                        while farmRunning and isAlive(target) do
                            -- keep us glued to the enemy in case it moves
                            safeTP(hrpEnemy.CFrame * offset)
                            task.wait(0.15)
                        end
                    end
                    task.wait(0.1)
                end
            end)
        end
    end
})