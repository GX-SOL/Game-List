
-- =========================
-- zzzhub
-- Version: 1.0.0
-- =========================

repeat task.wait() until game:IsLoaded()

-- FPS Unlock
if setfpscap then
    setfpscap(1000000)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "zzzhub",
        Text = "FPS Unlocked!",
        Duration = 2,
        Button1 = "Okay"
    })
else
    warn("Your exploit does not support setfpscap.")
end

local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

-- ====================== SERVICES ======================
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local VirtualUser = game:GetService("VirtualUser")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local Backpack = LocalPlayer:WaitForChild("Backpack")

-- ====================== SETTINGS ======================
local AutoCollect = false
local AutoCollectV2 = false
local AutoEB = false
local AutoEBRunning = false
local AutoCollectV2Running = false
local AutoFarm = false
local autoClicking = false
local AutoCollectDelay = 20
local ClickInterval = 0.05 -- Minimum working speed
local AntiAFKEnabled = false

local SellPlant = false
local SellBrainrot = false
local SellEverything = false

-- Multi-bat support from DYHUB
local HeldToolNames = {
    "Basic Bat",
    "Leather Grip Bat",
    "Iron Plate Bat",
    "Iron Core Bat",
    "Aluminum Bat"
}
local HeldToolName = nil

local serverStartTime = os.time()

-- ====================== SHOP ITEMS ======================
local shop = {
    seedList = {
        "Cactus Seed",
        "Strawberry Seed",
        "Pumpkin Seed",
        "Sunflower Seed",
        "Dragon Seed",
        "Eggplant Seed",
        "Watermelon Seed",
        "Grape Seed",
        "Cocotank Seed",
        "Carnivorous Plant Seed",
        "Mr Carrot Seed",
        "Tomatrio Seed",
        "Shroombino Seed"
    },
    gearList = {
        "Water Bucket",
        "Frost Grenade",
        "Banana Gun",
        "Frost Blower",
        "Carrot Launcher"
    },
    PlatformList = {
        "1","2","3","4","5","6","7","8","9","10",
        "11","12","13","14","15","16","17"
    }
}

-- ====================== VARIABLES ======================
local selectedSeeds = {}
local selectedGears = {}
local selectedPlatform = {}

local AutoBuyAllSeed = false
local AutoBuyAllGear = false
local AutoBuyPlatformAll = false
local AutoBuySelectedGear = false
local AutoBuySelectedSeed = false
local AutoBuyPlatformSelect = false

-- ====================== HELPER FUNCTIONS ======================
local function GetMyPlot()
    for _, plot in ipairs(Workspace.Plots:GetChildren()) do
        local playerSign = plot:FindFirstChild("PlayerSign")
        if playerSign then
            local bg = playerSign:FindFirstChild("BillboardGui")
            local textLabel = bg and bg:FindFirstChild("TextLabel")
            if textLabel and (textLabel.Text == LocalPlayer.Name or textLabel.Text == LocalPlayer.DisplayName) then
                return plot
            end
        end
    end
    return nil
end

local function GetMyPlotName()
    local plot = GetMyPlot()
    return plot and plot.Name or "No Plot"
end

local function GetMoney()
    local leaderstats = LocalPlayer:FindFirstChild("leaderstats")
    return leaderstats and leaderstats:FindFirstChild("Money") and leaderstats.Money.Value or 0
end

local function GetRebirth()
    local gui = LocalPlayer:FindFirstChild("PlayerGui") and LocalPlayer.PlayerGui:FindFirstChild("Main")
    if gui and gui:FindFirstChild("Rebirth") then
        local text = gui.Rebirth.Frame.Title.Text or "Rebirth 0"
        local n = tonumber(text:match("%d+")) or 0
        return math.max(0, n - 1)
    end
    return 0
end

local function FormatTime(sec)
    local h = math.floor(sec / 3600)
    local m = math.floor((sec % 3600) / 60)
    local s = sec % 60
    return string.format("%02d:%02d:%02d", h, m, s)
end

local function GetBridgeNet2()
    return ReplicatedStorage:FindFirstChild("BridgeNet2")
end

local function GetRemotesFolder()
    return ReplicatedStorage:FindFirstChild("Remotes")
end

-- ====================== WINDOW ======================
local Window = WindUI:CreateWindow({
    Title = "zzzhub",
    Icon = "rbxassetid://18793083209",
    Author = "Plants Vs Brainrots | Best of Both",
    Folder = "zzzhub",
    Size = UDim2.fromOffset(500, 350),
    Transparent = true,
    Theme = "Dark",
    BackgroundImageTransparency = 0.8,
    HasOutline = false,
    HideSearchBar = true,
    ScrollBarEnabled = false,
    User = { Enabled = true, Anonymous = false },
})

Window:EditOpenButton({
    Title = "zzzhub - Open",
    Icon = "monitor",
    CornerRadius = UDim.new(0, 6),
    StrokeThickness = 2,
    Color = ColorSequence.new(Color3.fromRGB(30, 30, 30), Color3.fromRGB(255, 255, 255)),
    Draggable = true,
})

local InfoTab = Window:Tab({ Title = "Information", Icon = "info" })
local MainDivider = Window:Divider()
local Main = Window:Tab({ Title = "Main", Icon = "rocket" })
local Shop = Window:Tab({ Title = "Shop", Icon = "shopping-cart" })
local Collect = Window:Tab({ Title = "Auto", Icon = "crown" })
local Sell = Window:Tab({ Title = "Sell", Icon = "dollar-sign" })
local Misc = Window:Tab({ Title = "Misc", Icon = "settings" })
Window:SelectTab(1)

-- ====================== MAIN ======================
Main:Section({ Title = "Auto Farm", Icon = "backpack" })

Main:Paragraph({
    Title = "Your Status",
    Desc = "[+] Show Plots \n[+] Show Rebirth \n[+] Show Money \n[+] Show Playtime",
    Image = "rbxassetid://18793083209",
    ImageSize = 50,
    Buttons = {
        {
            Icon = "info",
            Title = "Show Status",
            Callback = function()
                local message = "Your Status\n"
                message = message .. "Plots: " .. GetMyPlotName() .. "\n"
                message = message .. "Rebirth: " .. GetRebirth() .. "\n"
                message = message .. "Money: " .. GetMoney() .. "\n"
                message = message .. "Playtime: " .. FormatTime(os.time() - serverStartTime)

                WindUI:Notify({
                    Title = "Status Update",
                    Content = message,
                    Duration = 2,
                    Icon = "user-check",
                })
            end
        }
    }
})

Main:Section({ Title = "Use on private servers for security", Icon = "triangle-alert" })

Main:Slider({
    Title = "Auto Farm Speed",
    Description = "Set click interval (0.05 = fastest working speed)",
    Value = {Min = 0.05, Max = 1.0, Default = 0.05},
    Step = 0.01,
    Callback = function(val)
        ClickInterval = val
    end
})

-- ====================== BRAINROTS CACHE (Horizon's Superior Detection + Real-time Updates) ======================
local BrainrotsCache = {}
local BrainrotsFolder = nil

local function UpdateBrainrotsCache()
    local ok, folder = pcall(function()
        return Workspace:WaitForChild("ScriptedMap"):WaitForChild("Brainrots")
    end)
    if not ok or not folder then return end
    BrainrotsFolder = folder
    BrainrotsCache = {}
    for _, b in ipairs(folder:GetChildren()) do
        if b:FindFirstChild("BrainrotHitbox") then
            table.insert(BrainrotsCache, b)
        end
    end
end

-- Real-time brainrot detection
local function SetupBrainrotListener()
    if BrainrotsFolder then
        BrainrotsFolder.ChildAdded:Connect(function(child)
            if child:FindFirstChild("BrainrotHitbox") or child:WaitForChild("BrainrotHitbox", 0.5) then
                table.insert(BrainrotsCache, child)
            end
        end)
        
        BrainrotsFolder.ChildRemoved:Connect(function(child)
            for i, b in ipairs(BrainrotsCache) do
                if b == child then
                    table.remove(BrainrotsCache, i)
                    break
                end
            end
        end)
    end
end

local function GetNearestBrainrot()
    local nearest = nil
    local minDist = math.huge
    for _, b in ipairs(BrainrotsCache) do
        local hitbox = b:FindFirstChild("BrainrotHitbox")
        if hitbox then
            local dist = (HumanoidRootPart.Position - hitbox.Position).Magnitude
            if dist < minDist then
                minDist = dist
                nearest = b
            end
        end
    end
    return nearest
end

-- ====================== UTILITY (DYHUB's Multi-Bat + Horizon's positioning) ======================
local function EquipBat()
    -- First check if we already have a bat equipped
    for _, toolName in ipairs(HeldToolNames) do
        if Character:FindFirstChild(toolName) then
            HeldToolName = toolName
            return true  -- Already equipped, no need to re-equip
        end
    end
    
    -- If no bat is equipped, find one in backpack and equip it
    for _, toolName in ipairs(HeldToolNames) do
        local tool = Backpack:FindFirstChild(toolName)
        if tool then
            tool.Parent = Character
            HeldToolName = toolName
            return true
        end
    end
    return false
end

local function InstantWarpToBrainrot(brainrot)
    local hitbox = brainrot and brainrot:FindFirstChild("BrainrotHitbox")
    if hitbox then
        local offset = Vector3.new(0, 1, 3) -- Horizon's stable positioning
        HumanoidRootPart.CFrame = CFrame.new(hitbox.Position + offset, hitbox.Position)
    end
end

-- DYHUB's faster clicking
local function DoClick()
    pcall(function()
        VirtualUser:Button1Down(Vector2.new(0, 0))
        task.wait(0.05) -- Faster than Horizon
        VirtualUser:Button1Up(Vector2.new(0, 0))
    end)
end

-- ====================== AUTO FARM (Combined Best) ======================
Main:Toggle({
    Title = "Auto Farm OP",
    Description = "Real-time brainrot detection + optimized farming",
    Default = false,
    Callback = function(state)
        AutoFarm = state
        autoClicking = state

        if state then
            EquipBat()
            UpdateBrainrotsCache()
            SetupBrainrotListener()  -- Enable real-time detection

            -- DYHUB's Fast Auto Clicker
            task.spawn(function()
                while autoClicking do
                    if Character and Character:FindFirstChild(HeldToolName) then
                        DoClick()
                    end
                    task.wait(ClickInterval)
                end
            end)

            -- Auto Equip
            task.spawn(function()
                while AutoFarm do
                    if Character and not Character:FindFirstChild(HeldToolName) then
                        EquipBat()
                    end
                    task.wait(0.25)
                end
            end)

            -- Cache Refresh (balanced timing)
            task.spawn(function()
                while AutoFarm do
                    UpdateBrainrotsCache()
                    task.wait(0.5)  -- Balanced refresh rate
                end
            end)

            -- Combined Auto Farm Logic (with Horizon's wait logic)
            task.spawn(function()
                while AutoFarm do
                    local currentTarget = GetNearestBrainrot()
                    
                    -- Horizon's logic: wait when no brainrot found
                    if not currentTarget then
                        task.wait(0.3)  -- Give cache time to update
                        continue
                    end
                    
                    if currentTarget and currentTarget:FindFirstChild("BrainrotHitbox") then
                        InstantWarpToBrainrot(currentTarget)
                        pcall(function()
                            local remotes = GetRemotesFolder()
                            if remotes and remotes:FindFirstChild("AttacksServer") and remotes.AttacksServer:FindFirstChild("WeaponAttack") then
                                remotes.AttacksServer.WeaponAttack:FireServer({ { target = currentTarget.BrainrotHitbox } })
                            else
                                ReplicatedStorage.Remotes.AttacksServer.WeaponAttack:FireServer({ { target = currentTarget.BrainrotHitbox } })
                            end
                        end)
                    end
                    task.wait(ClickInterval)
                end
            end)
        else
            autoClicking = false
        end
    end
})

-- ====================== AUTO COLLECT ======================
local function GetNearestPlot()
    local nearestPlot = nil
    local minDist = math.huge
    for _, plot in ipairs(Workspace.Plots:GetChildren()) do
        if plot:IsA("Folder") then
            local center = plot:FindFirstChild("Center") or plot:FindFirstChildWhichIsA("BasePart")
            if center then
                local dist = (HumanoidRootPart.Position - center.Position).Magnitude
                if dist < minDist then
                    minDist = dist
                    nearestPlot = plot
                end
            end
        end
    end
    return nearestPlot
end

local function CollectFromPlot(plot)
    if not plot then return end
    local brainrotsFolder = plot:FindFirstChild("Brainrots")
    if not brainrotsFolder then return end

    for i = 1, 17 do
        local slot = brainrotsFolder:FindFirstChild(tostring(i))
        if slot and slot:FindFirstChild("Brainrot") then
            local brainrot = slot:FindFirstChild("Brainrot")
            if brainrot:FindFirstChild("BrainrotHitbox") then
                local hitbox = brainrot.BrainrotHitbox
                local offset = Vector3.new(0, 1, 3)
                HumanoidRootPart.CFrame = CFrame.new(hitbox.Position + offset, hitbox.Position)
                task.wait(0.2)
                pcall(function()
                    local remotes = GetRemotesFolder()
                    if remotes and remotes:FindFirstChild("AttacksServer") and remotes.AttacksServer:FindFirstChild("WeaponAttack") then
                        remotes.AttacksServer.WeaponAttack:FireServer({ { target = hitbox } })
                    else
                        ReplicatedStorage.Remotes.AttacksServer.WeaponAttack:FireServer({ { target = hitbox } })
                    end
                end)
            end
        end
    end
end

Collect:Section({ Title = "Auto Collect", Icon = "hand-coins" })

Collect:Slider({
    Title = "Auto Collect Delay (sec)",
    Description = "Set delay time between collections",
    Value = {Min = 1, Max = 300, Default = 20},
    Step = 1,
    Callback = function(val)
        AutoCollectDelay = val
    end
})

Collect:Toggle({
    Title = "Auto Collect Money V1",
    Description = "Teleport to collect (Horizon method)",
    Default = false,
    Callback = function(state)
        AutoCollect = state
        if state then
            task.spawn(function()
                while AutoCollect do
                    local nearestPlot = GetNearestPlot()
                    if nearestPlot then
                        CollectFromPlot(nearestPlot)
                    end
                    task.wait(AutoCollectDelay)
                end
            end)
        end
    end
})

Collect:Toggle({
    Title = "Auto Collect Money V2",
    Description = "No teleport (DYHUB method)",
    Default = false,
    Callback = function(state)
        AutoCollectV2 = state
        if state and not AutoCollectV2Running then
            AutoCollectV2Running = true
            task.spawn(function()
                while AutoCollectV2 do
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("EquipBestBrainrots"):FireServer()
                    task.wait(AutoCollectDelay)
                end
                AutoCollectV2Running = false
            end)
        end
    end
})

-- ====================== AUTO EQUIP ======================
Collect:Section({ Title = "Auto Equip", Icon = "star" })

Collect:Toggle({
    Title = "Auto Equip Best Brainrot",
    Description = "DYHUB's auto equip system",
    Default = false,
    Callback = function(state)
        AutoEB = state
        if state and not AutoEBRunning then
            AutoEBRunning = true
            task.spawn(function()
                while AutoEB do
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("EquipBestBrainrots"):FireServer()
                    task.wait(5)
                end
                AutoEBRunning = false
            end)
        end
    end
})

-- ====================== SELL ======================
Sell:Section({ Title = "Auto Sell", Icon = "dollar-sign" })

Sell:Toggle({
    Title = "Sell Brainrot All",
    Default = false,
    Callback = function(state)
        SellBrainrot = state
    end
})

Sell:Toggle({
    Title = "Sell Plants All",
    Default = false,
    Callback = function(state)
        SellPlant = state
    end
})

Sell:Section({ Title = "Sell Everything", Icon = "gem" })

Sell:Toggle({
    Title = "Sell Both All",
    Default = false,
    Callback = function(state)
        SellEverything = state
    end
})

-- ====================== SHOP ======================
Shop:Section({ Title = "Buy Seed", Icon = "leaf" })

Shop:Dropdown({
    Title = "Select Seed",
    Values = shop.seedList,
    Multi = true,
    Callback = function(values)
        selectedSeeds = values
    end
})

Shop:Toggle({
    Title = "Auto Buy Seed (Selected)",
    Default = false,
    Callback = function(state)
        AutoBuySelectedSeed = state
    end
})

Shop:Toggle({
    Title = "Auto Buy Seed (All)",
    Default = false,
    Callback = function(state)
        AutoBuyAllSeed = state
    end
})

Shop:Section({ Title = "Buy Gear", Icon = "package" })

Shop:Dropdown({
    Title = "Select Gear",
    Values = shop.gearList,
    Multi = true,
    Callback = function(values)
        selectedGears = values
    end
})

Shop:Toggle({
    Title = "Auto Buy Gear (Selected)",
    Default = false,
    Callback = function(state)
        AutoBuySelectedGear = state
    end
})

Shop:Toggle({
    Title = "Auto Buy Gear (All)",
    Default = false,
    Callback = function(state)
        AutoBuyAllGear = state
    end
})

-- DYHUB's Platform Buying
Shop:Section({ Title = "Buy Platform", Icon = "house" })

Shop:Dropdown({
    Title = "Select Platform",
    Values = shop.PlatformList,
    Multi = true,
    Callback = function(values)
        selectedPlatform = values
    end
})

Shop:Toggle({
    Title = "Auto Buy Platform (Selected)",
    Default = false,
    Callback = function(state)
        AutoBuyPlatformSelect = state
        if state and #selectedPlatform > 0 then
            task.spawn(function()
                while state do
                    for _, platform in ipairs(selectedPlatform) do
                        local BuyPlatformRemote = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("BuyPlatform")
                        BuyPlatformRemote:FireServer(platform)
                        task.wait(0.3)
                    end
                    task.wait(0.1)
                end
            end)
        end
    end
})

Shop:Toggle({
    Title = "Auto Buy Platform (All)",
    Default = false,
    Callback = function(state)
        AutoBuyPlatformAll = state
        if state then
            task.spawn(function()
                while state do
                    for _, platform in ipairs(shop.PlatformList) do
                        local BuyPlatformRemote = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("BuyPlatform")
                        BuyPlatformRemote:FireServer(platform)
                        task.wait(0.3)
                    end
                    task.wait(0.1)
                end
            end)
        end
    end
})

-- ====================== MISC (DYHUB Features) ======================
Misc:Section({ Title = "Misc", Icon = "settings" })

Misc:Toggle({
    Title = "Anti AFK",
    Description = "Prevent being kicked",
    Default = false,
    Callback = function(state)
        AntiAFKEnabled = state
        if state then
            local conn
            conn = Players.LocalPlayer.Idled:Connect(function()
                if AntiAFKEnabled then
                    VirtualUser:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
                    task.wait(0.1)
                    VirtualUser:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
                else
                    conn:Disconnect()
                end
            end)
        end
    end
})

Misc:Button({
    Title = "FPS Boost",
    Description = "Improve game performance",
    Callback = function()
        WindUI:Notify({
            Title = "FPS Boost",
            Content = "Executing FPS boost script...",
            Duration = 2,
            Icon = "zap",
        })
        loadstring(game:HttpGet("https://raw.githubusercontent.com/dyumra/DYHUB-Universal-Game/refs/heads/main/Nigga.lua"))()
    end
})

-- ====================== SELLING LOOP ======================
task.spawn(function()
    while task.wait(0.5) do
        if SellBrainrot or SellPlant or SellEverything then
            local remotes = GetRemotesFolder()
            if remotes and remotes:FindFirstChild("ItemSell") then
                pcall(function() remotes.ItemSell:FireServer() end)
            else
                pcall(function() ReplicatedStorage.Remotes.ItemSell:FireServer() end)
            end
        end
    end
end)

-- ====================== AUTO BUY LOOPS ======================
-- Auto Buy Seed Loop
task.spawn(function()
    while task.wait(0.95) do
        if AutoBuySelectedSeed and #selectedSeeds > 0 then
            for _, seed in ipairs(selectedSeeds) do
                if not AutoBuySelectedSeed then break end
                local args = {{ seed, "\b" }}
                local bn = GetBridgeNet2()
                if bn and bn:FindFirstChild("dataRemoteEvent") then
                    pcall(function() bn.dataRemoteEvent:FireServer(unpack(args)) end)
                else
                    pcall(function() 
                        ReplicatedStorage:WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent"):FireServer(unpack(args)) 
                    end)
                end
                task.wait(0.12)
            end
        end

        if AutoBuyAllSeed then
            for _, seed in ipairs(shop.seedList) do
                if not AutoBuyAllSeed then break end
                local args = {{ seed, "\b" }}
                local bn = GetBridgeNet2()
                if bn and bn:FindFirstChild("dataRemoteEvent") then
                    pcall(function() bn.dataRemoteEvent:FireServer(unpack(args)) end)
                else
                    pcall(function() 
                        ReplicatedStorage:WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent"):FireServer(unpack(args)) 
                    end)
                end
                task.wait(0.12)
            end
        end
    end
end)

-- Auto Buy Gear Loop
task.spawn(function()
    while task.wait(0.95) do
        if AutoBuySelectedGear and #selectedGears > 0 then
            for _, gear in ipairs(selectedGears) do
                if not AutoBuySelectedGear then break end
                local args = {{ gear, "\026" }}
                local bn = GetBridgeNet2()
                if bn and bn:FindFirstChild("dataRemoteEvent") then
                    pcall(function() bn.dataRemoteEvent:FireServer(unpack(args)) end)
                else
                    pcall(function() 
                        ReplicatedStorage:WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent"):FireServer(unpack(args)) 
                    end)
                end
                task.wait(0.12)
            end
        end

        if AutoBuyAllGear then
            for _, gear in ipairs(shop.gearList) do
                if not AutoBuyAllGear then break end
                local args = {{ gear, "\026" }}
                local bn = GetBridgeNet2()
                if bn and bn:FindFirstChild("dataRemoteEvent") then
                    pcall(function() bn.dataRemoteEvent:FireServer(unpack(args)) end)
                else
                    pcall(function() 
                        ReplicatedStorage:WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent"):FireServer(unpack(args)) 
                    end)
                end
                task.wait(0.12)
            end
        end
    end
end)

-- ====================== INFO TAB ======================
InfoTab:Section({ Title = "zzzhub Info", Icon = "info" })

InfoTab:Paragraph({
    Title = "Features Combined",
    Desc = "✅  ",
    Image = "rbxassetid://18793083209",
    ImageSize = 42,
})

InfoTab:Button({
    Title = "Join Discord",
    Callback = function()
        setclipboard("https://discord.gg/sYSvumHTdZ")
        WindUI:Notify({
            Title = "Copied!",
            Content = "Discord invite copied to clipboard",
            Duration = 2,
            Icon = "clipboard-check",
        })
    end
})

WindUI:Notify({
    Title = "zzzhub Loaded",
    Content = "Best of ktro !",
    Duration = 3,
    Icon = "check-circle",
})